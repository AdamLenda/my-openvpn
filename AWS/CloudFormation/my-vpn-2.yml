AWSTemplateFormatVersion: 2010-09-09
Parameters:

  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: The Availability Zone to use Public Subnet and Private Subnet
    MinLength: 3

  BastionInstanceMachineImageId:
    Type: AWS::EC2::Image::Id
    Description: >
      Provide a HVM Amazon Machine Image Id which should follow the format "ami-XXXXXXXX"
      These can be found either on the EC2 Launch page for the current region. For example, in us-east-2 the url is:
      https://us-east-1.console.aws.amazon.com/ec2/v2/home?region=us-east-2#LaunchInstanceWizard:
    Default: ami-04681a1dbd79675a5

  BastionInstanceType:
    Type: String
    Description: >
      Bastion Instances allow SSH and run OpenVPN. Instance types are available at: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html
    Default: t3.nano
    AllowedValues:
      - t3.nano
      - t3.micro
      - t3.small

  SSHKeyPair:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: Select an AWS Key Pair that will be used to allow SSH to EC2 Instances

  SshSourceIpCidr:
    Type: String
    Description: IPv4 CIDR Block
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  Vpc:
    Type: AWS::EC2::VPC::Id

  Subnet:
    Type: AWS::EC2::Subnet::Id

  VpcCidrBlock:
    Type: String
    Default: 172.31.0.0/16

Resources:
  PublicSshSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref Vpc
      GroupName: !Sub '${AWS::StackName}-public-ssh'
      GroupDescription: Security Group to allow Public SSH Connections
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref SshSourceIpCidr
      Tags:
      - Key: Name
        Value: my-openvpn-public-ssh

  PublicOpenVpnSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupName: !Sub "${AWS::StackName}-public-openvpn"
      GroupDescription: Security Group to allow Public TCP/UDP Connections on port 1194
      SecurityGroupIngress:
      - IpProtocol: udp
        FromPort: 1194
        ToPort: 1194
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: my-openvpn-public-openvpn

  BastionServerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: my-openvpn-bastion-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com

  BastionServerSourceFilesPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: my-openvpn-bastion-source-files-policy
      PolicyDocument:
        Statement:
          Action:
          - s3:GetObject
          Effect: Allow
          Resource: "arn:aws:s3:::my-openvpn/*"
      Roles:
      - !Ref BastionServerRole

  BastionServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - !Ref BastionServerRole
      InstanceProfileName: my-openvpn-bastion-profile

  BastionServer:
    Type: AWS::EC2::Instance
    Metadata:
      "AWS::CloudFormation::Authentication":
        SourceFilesAuthentication:
          type: "S3"
          buckets:
          - arn:aws:s3:::my-openvpn
          roleName: !Ref BastionServerRole

      "AWS::CloudFormation::Init":
        configSets:
          Bootstrap:
          - DeploySourceFiles
        DeploySourceFiles:
          packages:
            rpm:
              epel: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
            yum:
              openvpn: ["2.4.6"]
              ufw: ["0.35"]

          files:
            /usr/sbin/configure_openvpn:
              source: "https://my-openvpn.s3.amazonaws.com/configure_openvpn.sh"
              mode: "000500"
              owner: "root"
              group: "root"
              authentication: SourceFilesAuthentication

            /usr/sbin/configure_ufw_for_openvpn:
              source: "https://my-openvpn.s3.amazonaws.com/configure_ufw_for_openvpn.sh"
              mode: "000500"
              owner: "root"
              group: "root"
              authentication: SourceFilesAuthentication

            /usr/sbin/my-openvpn-key-maker:
              source: "https://my-openvpn.s3.amazonaws.com/my-openvpn-key-maker.sh"
              mode: "000500"
              owner: "root"
              group: "root"
              authentication: SourceFilesAuthentication

          commands:
            ConfigureOpenVpn:
              command:
                Fn::Sub:
                - |+
                  configure_ufw_for_openvpn \
                    --network-cidr-block ${VpcCidrBlock};
                  configure_openvpn  \
                    --network-cidr-block ${VpcCidrBlock} \
                    --vpn-client-ip-cidr-block ${VpcVpnClientCidrBlock}
                  my-openvpn-key-maker -m /etc/my-openvpn -s /etc/openvpn/server
                - {VpcVpnClientCidrBlock: !Select [1, !Cidr [!Ref VpcCidrBlock, 2, 8] ] }
              test: test ! -e /etc/openvpn/server/server.conf;

            StartOpenVpn:
              command: systemctl enable openvpn-server@server.service;
              test: |
                systemctl status openvpn-server@server.service  | grep 'Active: active (running)'; [[ $? != 0 ]];

            EnableOpenVpn:
              command: systemctl start openvpn-server@server.service;
              test: |
                test ! -e /etc/systemd/system/multi-user.target.wants/openvpn-server@server.service;
              #test: TODO add test to prevent this command from re-executing on stack update

    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      KeyName: !Ref SSHKeyPair
      IamInstanceProfile: !Ref BastionServerInstanceProfile
      InstanceType: !Ref BastionInstanceType
      NetworkInterfaces:
      - AssociatePublicIpAddress: true
        DeleteOnTermination: true
        Description: Bastion Public Network Interface
        DeviceIndex: 0
        GroupSet:
        - !Ref PublicSshSecurityGroup
        - !Ref PublicOpenVpnSecurityGroup
        SecondaryPrivateIpAddressCount: 0
        SubnetId: !Ref Subnet
      ImageId: !Ref BastionInstanceMachineImageId
      Tags:
      - Key: Name
        Value: my-openvpn-bastion
      UserData: !Base64
        Fn::Sub: |+
          #!/bin/bash -xe
          yum update -y aws-cfn-bootstrap

          # Install the files and packages from the metadata
          /opt/aws/bin/cfn-init \
              -v \
              --region ${AWS::Region} \
              --stack ${AWS::StackName} \
              --resource BastionServer \
              --configsets Bootstrap;

          # Signal the status from cfn-init
          /opt/aws/bin/cfn-signal \
              -e $? \
              --region ${AWS::Region} \
              --stack ${AWS::StackName} \
              --resource BastionServer ;